<?php

/*
 * This file is part of JoliCode's Harvest PHP API project.
 *
 * (c) JoliCode <coucou@jolicode.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace JoliCode\Harvest;

use Http\Client\Common\Plugin\AddHostPlugin;
use Http\Client\Common\Plugin\AddPathPlugin;
use Http\Client\Common\Plugin\ErrorPlugin;
use Http\Client\Common\Plugin\HeaderAppendPlugin;
use Http\Client\Common\PluginClient;
use Http\Discovery\Psr17FactoryDiscovery;
use Http\Discovery\Psr18ClientDiscovery;
use JoliCode\Harvest\Api\Client;
use Psr\Http\Client\ClientInterface;

class ClientFactory
{
    public static function create(string $token, string $accountId, ClientInterface $httpClient = null): Client
    {
        // Find a default HTTP client if none provided
        if (null === $httpClient) {
            $httpClient = Psr18ClientDiscovery::find();
        }

        // Decorates the HTTP client with some plugins
        $uri = Psr17FactoryDiscovery::findUrlFactory()->createUri('https://api.harvestapp.com/api/v2');
        $pluginClient = new PluginClient($httpClient, [
            new AddPathPlugin($uri),
            new AddHostPlugin($uri),
            new HeaderAppendPlugin([
                'Authorization' => 'Bearer '.$token,
                'Harvest-Account-Id' => $accountId,
                'User-Agent' => 'Harvest API Example',
                'Accept' => 'application/json',
            ]),
        ]);

        // Instantiate an OpenApi client generated by Jane
        return Client::create($pluginClient);
    }
}
